# Configuration HIGH PERFORMANCE pour Cancer du sein
# Objectif: 90-95% accuracy avec dataset numérique optimisé

dataset: "datasets/Cancer_neuroplast.csv"
input_cols: 30    # 30 features cancer (après target)
output_cols: 1    # 1 target binaire (1=Malignant, 0=Benign)
batch_size: 16    # Batch plus petit pour meilleure convergence
max_epochs: 300   # Plus d'époques pour convergence optimale
learning_rate: 0.0003  # LR plus bas pour stabilité

# Early stopping optimisé pour hautes performances
early_stopping: true
patience: 50      # Patience élevée pour optimum global
train_test_split: 0.85  # Plus de données d'entraînement

# Hyperparamètres optimisés pour cancer dataset
dropout_rate: 0.05       # Très légère régularisation
l2_regularization: 0.00001  # Régularisation minimale
momentum: 0.95           # Momentum élevé
gradient_clipping: 15.0  # Éviter explosion gradients

# Gestion optimale du déséquilibre (37% M, 63% B)
class_weights: [1.0, 1.7]  # Pondération pour équilibrer
threshold_optimization: true

# Informations dataset optimisé
name: "cancer_wisconsin_high_performance"
description: "Cancer du sein Wisconsin - Configuration haute performance"
num_samples: 568
num_features: 30
target_distribution: "37.3% Malignant, 62.6% Benign"

# Features critiques identifiées (d'après littérature)
critical_features: [
    "concave_points_worst",    # Forte corrélation malignité
    "perimeter_worst", 
    "concavity_worst",
    "radius_worst",
    "area_worst",
    "compactness_mean",
    "concavity_mean"
]

# Architecture recommandée pour ce dataset
recommended_architecture: [30, 256, 128, 64, 32, 1]  # 5 couches cachées

# Optimiseurs testés et classés par performance attendue
optimizers_ranking: [
    "adamw",      # Meilleur pour données médicales
    "adam",       # Robuste
    "rmsprop",    # Bon pour features variées
    "lion",       # Convergence rapide
    "nadam"       # Adam + Nesterov
]

# Activations recommandées pour cancer
activations_ranking: [
    "neuroplast", # Adaptatif optimal
    "gelu",       # Lisse et robuste
    "relu",       # Simple et efficace
    "leaky_relu", # Évite dying neurons
    "elu"         # Moyennes négatives
]

# Métriques prioritaires pour diagnostic médical
priority_metrics: ["accuracy", "recall", "precision", "f1_score", "auc_roc"]

# Configuration avancée pour haute performance
advanced_config:
  weight_initialization: "he_normal"  # Optimal pour ReLU-like
  bias_initialization: 0.01
  learning_rate_schedule: "cosine_decay"
  warmup_epochs: 10
  data_augmentation: false  # Pas recommandé pour données tabulaires
  
# Seuils de performance attendus
performance_targets:
  minimum_accuracy: 0.85    # 85% minimum acceptable
  target_accuracy: 0.92     # 92% objectif principal
  excellent_accuracy: 0.95  # 95% performance excellente
  minimum_recall: 0.85      # Crucial en médical
  target_f1_score: 0.88     # F1 équilibré

# Instructions d'utilisation optimisées
usage_optimized:
  single_best: "./neuroplast-ann --config config/cancer_high_performance.yml"
  architecture_test: "./neuroplast-ann --config config/cancer_high_performance.yml --test-complete-combinations"
  exhaustive_search: "./neuroplast-ann --config config/cancer_high_performance.yml --test-all"
  quick_validation: "./neuroplast-ann --config config/cancer_high_performance.yml --test-all-optimizers"

# Notes de performance
performance_notes: |
  Dataset Wisconsin Breast Cancer optimisé:
  - 568 échantillons, 30 features numériques
  - Target: 1=Malignant (212 cas), 0=Benign (356 cas)
  - Features normalisées et sans valeurs manquantes
  - Patterns discriminants: concavity, compactness, texture
  - Objectif réaliste: 90-95% accuracy
  - Configuration basée sur corrections v4.1

# Export et monitoring
metrics_export: true
csv_export: true
verbose_training: true
save_best_model: true 