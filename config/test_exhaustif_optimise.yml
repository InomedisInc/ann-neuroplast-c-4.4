# Configuration EXHAUSTIVE avec OPTIMISEUR TEMPS RÉEL
# ===================================================
# Test de TOUTES les 567 combinaisons avec optimisation temps réel sur chacune

# Paramètres d'entraînement optimisés
max_epochs: 50           # Époques par cycle d'optimisation
early_stopping: true     # Early stopping activé
patience: 15             # Patience modérée
batch_size: 32           # Batch size standard
learning_rate: 0.001     # Learning rate de base (sera adapté)

# OPTIMISEUR TEMPS RÉEL sur TOUTES les combinaisons
optimized_parameters: false  # On garde false pour forcer le test exhaustif
# Note: Il faudra modifier le code pour appliquer l'optimisation sur chaque combinaison

# Régularisation
dropout_rate: 0.1        # Dropout léger
l2_regularization: 0.0001 # L2 légère

# Momentum
momentum: 0.9            # Momentum de base (sera adapté)

# Gestion des classes
class_weights: [1.0, 1.0]  # Équilibré de base (sera adapté)

# TOUTES les méthodes neuroplast (7 méthodes)
neuroplast_methods:
  - standard
  - adaptive
  - advanced
  - bayesian
  - progressive
  - swarm
  - propagation

# TOUS les optimiseurs (9 optimiseurs)
optimizers:
  - adamw
  - adam
  - sgd
  - rmsprop
  - lion
  - adabelief
  - radam
  - adamax
  - nadam

# TOUTES les activations (9 activations)
activations:
  - neuroplast
  - relu
  - leaky_relu
  - gelu
  - sigmoid
  - tanh
  - elu
  - mish
  - swish

# Métriques complètes
metrics:
  - accuracy
  - f1_score
  - precision
  - recall

# Configuration spéciale pour optimisation exhaustive
# ==================================================
# Cette configuration demande :
# 1. Test de toutes les 567 combinaisons (7×9×9)
# 2. Application de l'optimiseur temps réel sur chaque combinaison
# 3. Adaptation automatique des paramètres pour chaque combinaison
# 4. Objectif de 90%+ pour chaque combinaison
# 5. Export CSV avec les résultats optimisés

# Total: 7 × 9 × 9 = 567 combinaisons
# Chaque combinaison optimisée avec cycles adaptatifs
# Durée estimée: 2-4 heures (optimisation complète) 