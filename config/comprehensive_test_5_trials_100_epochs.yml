# Configuration complète pour test exhaustif - 567 combinaisons 
# Version autonome sans dépendance à un fichier CSV externe

dataset: "embedded_data"  # Indique que les données sont intégrées
input_cols: 4  # Simplifié pour XOR-like data
output_cols: 1
batch_size: 32
max_epochs: 100
learning_rate: 0.001

# Paramètres d'entraînement
train_test_split: 0.8
patience: 15
early_stopping: true

# Données simulées intégrées (classification binaire simple)
# Format: feature1,feature2,feature3,feature4,target
embedded_training_data: |
  # Données d'entraînement simulées pour classification binaire
  # Pattern XOR-like avec 4 features
  0.1,0.1,0.1,0.1,0
  0.1,0.1,0.9,0.9,1
  0.1,0.9,0.1,0.9,1
  0.1,0.9,0.9,0.1,0
  0.9,0.1,0.1,0.9,1
  0.9,0.1,0.9,0.1,0
  0.9,0.9,0.1,0.1,0
  0.9,0.9,0.9,0.9,1
  0.2,0.2,0.2,0.2,0
  0.2,0.2,0.8,0.8,1
  0.2,0.8,0.2,0.8,1
  0.2,0.8,0.8,0.2,0
  0.8,0.2,0.2,0.8,1
  0.8,0.2,0.8,0.2,0
  0.8,0.8,0.2,0.2,0
  0.8,0.8,0.8,0.8,1
  0.3,0.3,0.3,0.3,0
  0.3,0.3,0.7,0.7,1
  0.3,0.7,0.3,0.7,1
  0.3,0.7,0.7,0.3,0
  0.7,0.3,0.3,0.7,1
  0.7,0.3,0.7,0.3,0
  0.7,0.7,0.3,0.3,0
  0.7,0.7,0.7,0.7,1
  0.4,0.4,0.4,0.4,0
  0.4,0.4,0.6,0.6,1
  0.4,0.6,0.4,0.6,1
  0.4,0.6,0.6,0.4,0
  0.6,0.4,0.4,0.6,1
  0.6,0.4,0.6,0.4,0
  0.6,0.6,0.4,0.4,0
  0.6,0.6,0.6,0.6,1
  0.15,0.15,0.15,0.15,0
  0.15,0.15,0.85,0.85,1
  0.15,0.85,0.15,0.85,1
  0.15,0.85,0.85,0.15,0
  0.85,0.15,0.15,0.85,1
  0.85,0.15,0.85,0.15,0
  0.85,0.85,0.15,0.15,0
  0.85,0.85,0.85,0.85,1
  0.25,0.25,0.25,0.25,0
  0.25,0.25,0.75,0.75,1
  0.25,0.75,0.25,0.75,1
  0.25,0.75,0.75,0.25,0
  0.75,0.25,0.25,0.75,1
  0.75,0.25,0.75,0.25,0
  0.75,0.75,0.25,0.25,0
  0.75,0.75,0.75,0.75,1
  0.35,0.35,0.35,0.35,0
  0.35,0.35,0.65,0.65,1
  0.35,0.65,0.35,0.65,1
  0.35,0.65,0.65,0.35,0
  0.65,0.35,0.35,0.65,1
  0.65,0.35,0.65,0.35,0
  0.65,0.65,0.35,0.35,0
  0.65,0.65,0.65,0.65,1
  0.45,0.45,0.45,0.45,0
  0.45,0.45,0.55,0.55,1
  0.45,0.55,0.45,0.55,1
  0.45,0.55,0.55,0.45,0
  0.55,0.45,0.45,0.55,1
  0.55,0.45,0.55,0.45,0
  0.55,0.55,0.45,0.45,0
  0.55,0.55,0.55,0.55,1
  0.05,0.05,0.05,0.05,0
  0.05,0.05,0.95,0.95,1
  0.05,0.95,0.05,0.95,1
  0.05,0.95,0.95,0.05,0
  0.95,0.05,0.05,0.95,1
  0.95,0.05,0.95,0.05,0
  0.95,0.95,0.05,0.05,0
  0.95,0.95,0.95,0.95,1
  0.12,0.12,0.12,0.12,0
  0.12,0.12,0.88,0.88,1
  0.12,0.88,0.12,0.88,1
  0.12,0.88,0.88,0.12,0
  0.88,0.12,0.12,0.88,1
  0.88,0.12,0.88,0.12,0
  0.88,0.88,0.12,0.12,0
  0.88,0.88,0.88,0.88,1
  0.22,0.22,0.22,0.22,0
  0.22,0.22,0.78,0.78,1
  0.22,0.78,0.22,0.78,1
  0.22,0.78,0.78,0.22,0
  0.78,0.22,0.22,0.78,1
  0.78,0.22,0.78,0.22,0
  0.78,0.78,0.22,0.22,0
  0.78,0.78,0.78,0.78,1
  0.32,0.32,0.32,0.32,0
  0.32,0.32,0.68,0.68,1
  0.32,0.68,0.32,0.68,1
  0.32,0.68,0.68,0.32,0
  0.68,0.32,0.32,0.68,1
  0.68,0.32,0.68,0.32,0
  0.68,0.68,0.32,0.32,0
  0.68,0.68,0.68,0.68,1
  0.42,0.42,0.42,0.42,0
  0.42,0.42,0.58,0.58,1
  0.42,0.58,0.42,0.58,1
  0.42,0.58,0.58,0.42,0
  0.58,0.42,0.42,0.58,1
  0.58,0.42,0.58,0.42,0
  0.58,0.58,0.42,0.42,0
  0.58,0.58,0.58,0.58,1

# Architecture optimale pour test exhaustif
architecture:
  hidden_layers: [256, 128]  # Input→256→128→Output
  dropout_rate: 0.2
  use_batch_norm: false

# Méthodes et paramètres (définis par CLI)
neuroplast_methods:
  - standard
  - adaptive  
  - advanced
  - bayesian
  - progressive
  - swarm
  - propagation

optimizers:
  - adamw
  - adam
  - sgd
  - rmsprop
  - lion
  - adabelief
  - radam
  - adamax
  - nadam

activations:
  - neuroplast
  - relu
  - leaky_relu
  - gelu
  - sigmoid
  - elu
  - mish
  - swish
  - prelu

# Configuration des expériences
experiments:
  num_trials: 3
  max_epochs: 100
  patience: 15
  convergence_threshold: 0.95
  
# Métriques de performance
metrics:
  primary: "accuracy"
  secondary: ["f1_score", "precision", "recall"]
  
# Export des résultats
export:
  csv: true
  json: false
  detailed_logs: true 